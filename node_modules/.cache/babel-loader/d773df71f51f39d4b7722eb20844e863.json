{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport initialization from \"../firebase/firebase.init\";\ninitialization();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const googleProvider = new GoogleAuthProvider();\n  const auth = getAuth(); // HANDLE SIGN IN WITH GOOGLE\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, googleProvider).then(result => {\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }; // HANDLE USER REGISTER WITH EMAIL & PASSWORD ACCOUNT\n\n\n  const userRegister = (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password).then(result => {\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }; // HANDLE USER LOGIN WITH EMAIL& PASSOWRD\n\n\n  const userLogin = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(result => {\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }; // SAVE USER BEHAVIOUR\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n    });\n    return () => unsubscribe;\n  }, []); // HANDLE SIGN OUT\n\n  const logOut = () => {\n    signOut(auth).then(() => {// Sign-out successful.\n    }).catch(error => {\n      // An error happened.\n      setError(error.message);\n    });\n  };\n\n  return {\n    user,\n    error,\n    signInWithGoogle,\n    userRegister,\n    userLogin,\n    logOut\n  };\n};\n\n_s(useFirebase, \"iIn/869R6T2MNTr+7gKkePKLFYg=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["D:/practice-projects/social-media-network/src/hooks/useFirebase.js"],"names":["useEffect","useState","getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","initialization","useFirebase","user","setUser","error","setError","googleProvider","auth","signInWithGoogle","then","result","catch","message","userRegister","email","password","userLogin","unsubscribe","logOut"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,OAAvD,EAAgEC,kBAAhE,EAAoFC,8BAApF,EAAoHC,0BAApH,QAAsJ,eAAtJ;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEAA,cAAc;;AACd,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,cAAc,GAAG,IAAIX,kBAAJ,EAAvB;AACA,QAAMY,IAAI,GAAGd,OAAO,EAApB,CALsB,CAOtB;;AACA,QAAMe,gBAAgB,GAAG,MAAM;AAC3Bd,IAAAA,eAAe,CAACa,IAAD,EAAOD,cAAP,CAAf,CACKG,IADL,CACWC,MAAD,IAAY;AACdP,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACH,KAHL,EAGOS,KAHP,CAGcP,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACH,KALL;AAMH,GAPD,CARsB,CAkBtB;;;AACA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCjB,IAAAA,8BAA8B,CAACS,IAAD,EAAOO,KAAP,EAAcC,QAAd,CAA9B,CACKN,IADL,CACWC,MAAD,IAAY;AACdP,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACH,KAHL,EAIKS,KAJL,CAIYP,KAAD,IAAW;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACH,KANL;AAOH,GARD,CAnBsB,CA6BtB;;;AACA,QAAMI,SAAS,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AACnChB,IAAAA,0BAA0B,CAACQ,IAAD,EAAOO,KAAP,EAAcC,QAAd,CAA1B,CACKN,IADL,CACWC,MAAD,IAAY;AACdP,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACH,KAHL,EAIKS,KAJL,CAIYP,KAAD,IAAW;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACH,KANL;AAOH,GARD,CA9BsB,CAyCtB;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,WAAW,GAAGpB,kBAAkB,CAACU,IAAD,EAAQL,IAAD,IAAU;AACnD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAFD,MAEO;AACHC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,KANqC,CAAtC;AAOA,WAAO,MAAMc,WAAb;AACH,GATQ,EASN,EATM,CAAT,CA1CsB,CAsDtB;;AACA,QAAMC,MAAM,GAAG,MAAM;AACjBtB,IAAAA,OAAO,CAACW,IAAD,CAAP,CAAcE,IAAd,CAAmB,MAAM,CACrB;AACH,KAFD,EAEGE,KAFH,CAEUP,KAAD,IAAW;AAChB;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACH,KALD;AAMH,GAPD;;AAUA,SAAO;AACHV,IAAAA,IADG;AAEHE,IAAAA,KAFG;AAGHI,IAAAA,gBAHG;AAIHK,IAAAA,YAJG;AAKHG,IAAAA,SALG;AAMHE,IAAAA;AANG,GAAP;AAQH,CAzED;;GAAMjB,W;;AA2EN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport initialization from \"../firebase/firebase.init\";\r\n\r\ninitialization();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('');\r\n\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n\r\n    // HANDLE SIGN IN WITH GOOGLE\r\n    const signInWithGoogle = () => {\r\n        signInWithPopup(auth, googleProvider)\r\n            .then((result) => {\r\n                setUser(result.user);\r\n            }).catch((error) => {\r\n                setError(error.message);\r\n            });\r\n    };\r\n\r\n\r\n    // HANDLE USER REGISTER WITH EMAIL & PASSWORD ACCOUNT\r\n    const userRegister = (email, password) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((result) => {\r\n                setUser(result.user);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    // HANDLE USER LOGIN WITH EMAIL& PASSOWRD\r\n    const userLogin = (email, password) => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((result) => {\r\n                setUser(result.user);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n\r\n    // SAVE USER BEHAVIOUR\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user)\r\n            } else {\r\n                setUser({})\r\n            }\r\n        });\r\n        return () => unsubscribe;\r\n    }, []);\r\n\r\n\r\n    // HANDLE SIGN OUT\r\n    const logOut = () => {\r\n        signOut(auth).then(() => {\r\n            // Sign-out successful.\r\n        }).catch((error) => {\r\n            // An error happened.\r\n            setError(error.message);\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        user,\r\n        error,\r\n        signInWithGoogle,\r\n        userRegister,\r\n        userLogin,\r\n        logOut\r\n    }\r\n};\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}